name: Flutter

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: actions/setup-java@v1.4.3
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1.4.0
      with:
        flutter-version: '1.22.x'
        channel: 'stable'
    - name: install NDK
      run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;20.0.5594570" --sdk_root=${ANDROID_SDK_ROOT}
    - name: download libzap
      run: wget https://github.com/djpnewton/libzap/releases/download/v13/android.zip
    - name: extract libzap
      run: mkdir -p native-libraries/android; cd native-libraries/android; unzip ../../android.zip
    - name: cache gradle modules
      uses: actions/cache@v2
      env:
          cache-name: cache-gradle-modules
      with:
          path: |
              ~/android/.gradle
              ~/.gradle/cache
              # ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ env.cache-name }}-${{ hashFiles('android/build.gradle') }}-${{ hashFiles('android/app/build.gradle') }}
          restore-keys: |
              ${{ runner.os }}-gradle-${{ env.cache-name }}-${{ hashFiles('android/build.gradle') }}
              ${{ runner.os }}-gradle-${{ env.cache-name }}-
              ${{ runner.os }}-gradle-
              ${{ runner.os }}-
    - name: cache flutter modules
      uses: actions/cache@v2
      env:
          cache-name: cache-flutter-modules
      with:
          path: |
              /Users/runner/hostedtoolcache/flutter
              # ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ env.cache-name }}-${{ env.flutter_version }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
              ${{ runner.os }}-pub-${{ env.flutter_version }}-
              ${{ runner.os }}-pub-
              ${{ runner.os }}-
    - run: flutter pub get
    - run: flutter dartfmt -n --set-exit-if-changed lib
    - run: flutter analyze
    #- run: flutter test
    - run: flutter build apk
    - name: upload apk
      uses: actions/upload-artifact@v1
      with:
        name: app-release-android.apk
        path: build/app/outputs/apk/release/app-release.apk

  build-ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: subosito/flutter-action@v1.4.0
      with:
        flutter-version: '1.22.x'
        channel: 'stable'
    - name: download libzap
      run: wget https://github.com/djpnewton/libzap/releases/download/v13/ios.zip
    - name: extract libzap
      run: mkdir -p native-libraries/ios; cd native-libraries/ios; unzip ../../ios.zip
    - name: cache cocoaPods modules
      uses: actions/cache@v2
      env:
          cache-name: cache-cocoapods-modules
      with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ env.cache-name }}-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
              ${{ runner.os }}-pods-${{ env.cache-name }}-
              ${{ runner.os }}-pods-
              ${{ runner.os }}-
    - name: cache flutter modules
      uses: actions/cache@v2
      env:
          cache-name: cache-flutter-modules
      with:
          path: |
              /Users/runner/hostedtoolcache/flutter
              # ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ env.cache-name }}-${{ env.flutter_version }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
              ${{ runner.os }}-pub-${{ env.flutter_version }}-
              ${{ runner.os }}-pub-
              ${{ runner.os }}-
    - run: flutter pub get
    - run: flutter dartfmt -n --set-exit-if-changed lib
    - run: flutter analyze
    #- run: flutter test
    - run: flutter build ios --release --no-codesign
    - name: upload build
      uses: actions/upload-artifact@v1
      with:
        name: app-release-ios.app
        path: build/ios/iphoneos/Runner.app
